apiVersion: v1
kind: Namespace
metadata:
  name: mongodb
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mongodb-init-script
  namespace: mongodb
data:
  init-user.js: |
    db.createUser({
      user: "testapp",
      pwd: "testapp",
      roles: [ { role: "readWrite", db: "testapp" } ]
    });
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mongodb-arm
  namespace: mongodb
  labels:
    app: mongodb-arm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mongodb-arm
  template:
    metadata:
      labels:
        app: mongodb-arm
    spec:
      containers:
      - name: mongodb
        image: mongo:6.0.4  # Using the official MongoDB image
        ports:
        - containerPort: 27017
        env:
        - name: MONGO_INITDB_ROOT_USERNAME
          value: "root"
        - name: MONGO_INITDB_ROOT_PASSWORD
          value: "testapp"
        - name: MONGO_INITDB_DATABASE
          value: "admin" # The database where root user is created
        volumeMounts:
        - name: mongodb-data
          mountPath: /data/db
        - name: init-script
          mountPath: /docker-entrypoint-initdb.d
      volumes:
      - name: mongodb-data
        persistentVolumeClaim:
          claimName: mongodb-arm-pv-claim
      - name: init-script
        configMap:
          name: mongodb-init-script
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mongodb-arm-pv-claim
  namespace: mongodb
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
---
apiVersion: v1
kind: Service
metadata:
  name: mongodb-arm
  namespace: mongodb
spec:
  type: ClusterIP
  ports:
    - port: 27017
  selector:
    app: mongodb-arm
